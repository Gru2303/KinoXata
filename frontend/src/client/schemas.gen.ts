// This file is auto-generated by @hey-api/openapi-ts

export const HTTPValidationErrorSchema = {
  properties: {
    detail: {
      items: {
        $ref: '#/components/schemas/ValidationError',
      },
      type: 'array',
      title: 'Detail',
    },
  },
  type: 'object',
  title: 'HTTPValidationError',
} as const

export const MovieRequestSchemaSchema = {
  properties: {
    limit: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Limit',
      default: 10,
    },
    offset: {
      anyOf: [
        {
          type: 'integer',
        },
        {
          type: 'null',
        },
      ],
      title: 'Offset',
      default: 0,
    },
  },
  type: 'object',
  title: 'MovieRequestSchema',
} as const

export const MovieSchemaSchema = {
  properties: {
    id: {
      type: 'integer',
      title: 'Id',
    },
    name: {
      type: 'string',
      title: 'Name',
    },
    title: {
      type: 'string',
      title: 'Title',
    },
    image: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Image',
    },
    afisha_image: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Afisha Image',
    },
    create_time: {
      type: 'string',
      format: 'date-time',
      title: 'Create Time',
    },
    update_time: {
      type: 'string',
      format: 'date-time',
      title: 'Update Time',
    },
  },
  type: 'object',
  required: ['id', 'name', 'title', 'create_time', 'update_time'],
  title: 'MovieSchema',
} as const

export const ValidationErrorSchema = {
  properties: {
    loc: {
      items: {
        anyOf: [
          {
            type: 'string',
          },
          {
            type: 'integer',
          },
        ],
      },
      type: 'array',
      title: 'Location',
    },
    msg: {
      type: 'string',
      title: 'Message',
    },
    type: {
      type: 'string',
      title: 'Error Type',
    },
  },
  type: 'object',
  required: ['loc', 'msg', 'type'],
  title: 'ValidationError',
} as const
